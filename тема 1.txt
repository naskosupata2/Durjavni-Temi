1. Програмирането се отнася до процеса на създаване на инструкции, които компютърът може да изпълни,
   за да изпълни конкретна задача или да разреши проблем.

   Програмен език е набор от синтактични правила и граматически конструкции,
   използвани за създаване на инструкции, които компютърът да изпълни. Някои често срещани езици за програмиране
   включват C, Python, Java и JavaScript.

   Средата за разработка (IDE) е софтуерно приложение, което предоставя цялостна среда за разработка на софтуер.
   Обикновено включва текстов редактор за писане на код, компилатор или интерпретатор за изпълнение на код и инструменти 
   за отстраняване на грешки за намиране и коригиране на грешки в кода. Някои популярни IDE включват 
   Visual Studio Code, Eclipse и PyCharm.
  
   Компилацията е процесът на преобразуване на изходния код, написан на език за програмиране от високо ниво,
   в машинен код, който може да бъде изпълнен директно от компютъра. Машинният код е оптимизиран за ефективно
   изпълнение и се съхранява като изпълним файл.
   Интерпретацията, от друга страна, е метод за изпълнение на изходния код чрез превеждането му в машинен код по
   време на изпълнение. Този метод не създава изпълним файл, а вместо това кодът се изпълнява директно от изходния код.


   За да демонстрираме използването на основната функционалност на среда за разработка,
   нека използваме примера за създаване и зареждане на проект в Visual Studio Code:
   - Стартираме Visual Studio
   - Избираме „Файл“ от менюто и след това избираме „Отвори папка“.
   - Избираме директория за нашият проект или създаваме нова директория за проекта.
   - След като папката на проекта е отворена в Visual Studio Code, можете да създадеме нов файл,
     като изберем „Файл“ и след това „Нов файл“.
   - Въвеждаме изходен код във файла.
   - Запазваме файла, като щракваме върху „Файл“ и след това върху „Запазване като“.
   - За да стартираме проекта, можем или да стартираме кода директно, като натиснем бутона "Run",
     или като изградим и стартираме кода от терминала.

 2. Променливата е наименувано място за съхранение в паметта на компютъра, което може да съдържа стойност
    от определен тип данни. Стойността, съхранена в променлива, може да бъде променена по време на изпълнение на програма.

    Има няколко вида променливи в програмирането, включително:
    
    Числови променливи: Те могат да съхраняват числа (цели числа или деситични)
    Символни променливи: Те могат да съхраняват символи.
    Булеви променливи: Те могат да съхраняват true или false
    Променливи в масив: Те могат да съхраняват колекция от стойности от един и същи тип данни
    Обектни променливи: Те могат да съхраняват колекция от стойности от различни типове данни

 3. Условните изрази са основна част от езиците за програмиране, които ви позволяват да контролирате потока на програма
    въз основа на определени условия. Има две форми на условни изрази: пълна и кратка форма.

    Пълна форма: Пълната форма на условен оператор използва ключовите думи "if", "else" и "else if".
    Кратка форма: Кратката форма е съкратена версия на пълната форма и обикновено се използва за прости условия.
   
    Инструкцията "switch" е контролна структура, използвана в много езици за програмиране за извършване на различни
    действия въз основа на различни условия. Подобно е на оператора „if-else“, но е по-ефективно и по-лесно за четене,
    когато има много възможни условия за проверка.

    Операторът "switch" приема променлива или израз като свой аргумент и го оценява,
    за да определи кой случай да се изпълни. Всеки случай е етикет, последван от блок код,
    и всеки случай представлява различно състояние. Ако стойността на израза съвпада със стойността на етикет на случай,
    кодът, свързан с този случай, се изпълнява. Операторът "switch" се прекратява, когато се срещне оператор "break" или
    когато се достигне краят на блока switch.

   И двата израза „else if“ и „switch“ ви позволяват да оцените множество условия във вашия код и да предприемете различни
   действия въз основа на условията, които са изпълнени. Те обаче имат някои основни разлики:

   -Производителност: От гледна точка на производителността и операторите „else if“ и „switch“ са ефективни и
    изборът между двете до голяма степен зависи от личните предпочитания и сложността на вашия код.

 4.Цикълът е функция, която ви позволява да изпълните един код многократно.
   Има няколко вида цикли, включително:
 
  -For цикъл: For цикъл се използва, когато знаете колко пъти искате да изпълните група от оператори.
   Цикълът for има заглавие, което дефинира променливите на цикъла, условието за прекратяване и 
   увеличаването/намаляването на променливите на цикъла.
  
  -Цикъл while: Цикъл while се използва, когато искате да изпълните група от изрази, стига определено условие да е вярно.
   Цикълът while проверява условието, преди да изпълни изразите. 
 
  -Цикъл do-while: Цикълът do-while е подобен на цикъла while, с изключение на това, че условието се проверява след
   изпълнение на операторите. Това означава, че операторите гарантирано ще бъдат изпълнени поне веднъж.

 5.Функции/методи са подпрограми, които определят какво да се изпълнява при извикването им.
   Те могат да приемат входни данни, да връщат резултати и да се използват неограничен брой пъти в програмата.
   Те помагат да се улесни и организира кода, допринасят за четимостта и поддържането на кода.
   Параметрите са входни данни, които се подават към функцията. Връщаната стойност е резултатът, 
   който функцията връща след изпълнение.
 
   Едно от най-големите предимства на използването на методи е оптимизацията на кода. С използването на методи,
   можем да дефинираме действие, което може да се извиква повторно в няколко места в програмата, без да е нужно да 
   повтаряме кода многократно. Друго предимство е по-лесното тестване и поддръжка на кода. Можем да тестваме и да
   поддържаме един метод отделно, а ако имаме проблем с него, можем да го поправим без да повлияе на останалата част от 
   кода.
    
